/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedDashboardsIndexImport } from './routes/_authenticated/dashboards/index'
import { Route as AuthenticatedAddonsIndexImport } from './routes/_authenticated/addons/index'
import { Route as AuthenticatedDashboardsDashboardPathEditImport } from './routes/_authenticated/dashboards/$dashboardPath/edit'
import { Route as AuthenticatedDashboardsDashboardPathPagePathIndexImport } from './routes/_authenticated/dashboards/$dashboardPath/$pagePath/index'
import { Route as AuthenticatedDashboardsDashboardPathPagePathEditImport } from './routes/_authenticated/dashboards/$dashboardPath/$pagePath/edit'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardsIndexRoute =
  AuthenticatedDashboardsIndexImport.update({
    id: '/dashboards/',
    path: '/dashboards/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAddonsIndexRoute = AuthenticatedAddonsIndexImport.update({
  id: '/addons/',
  path: '/addons/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardsDashboardPathEditRoute =
  AuthenticatedDashboardsDashboardPathEditImport.update({
    id: '/dashboards/$dashboardPath/edit',
    path: '/dashboards/$dashboardPath/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardsDashboardPathPagePathIndexRoute =
  AuthenticatedDashboardsDashboardPathPagePathIndexImport.update({
    id: '/dashboards/$dashboardPath/$pagePath/',
    path: '/dashboards/$dashboardPath/$pagePath/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardsDashboardPathPagePathEditRoute =
  AuthenticatedDashboardsDashboardPathPagePathEditImport.update({
    id: '/dashboards/$dashboardPath/$pagePath/edit',
    path: '/dashboards/$dashboardPath/$pagePath/edit',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/addons/': {
      id: '/_authenticated/addons/'
      path: '/addons'
      fullPath: '/addons'
      preLoaderRoute: typeof AuthenticatedAddonsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboards/': {
      id: '/_authenticated/dashboards/'
      path: '/dashboards'
      fullPath: '/dashboards'
      preLoaderRoute: typeof AuthenticatedDashboardsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboards/$dashboardPath/edit': {
      id: '/_authenticated/dashboards/$dashboardPath/edit'
      path: '/dashboards/$dashboardPath/edit'
      fullPath: '/dashboards/$dashboardPath/edit'
      preLoaderRoute: typeof AuthenticatedDashboardsDashboardPathEditImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboards/$dashboardPath/$pagePath/edit': {
      id: '/_authenticated/dashboards/$dashboardPath/$pagePath/edit'
      path: '/dashboards/$dashboardPath/$pagePath/edit'
      fullPath: '/dashboards/$dashboardPath/$pagePath/edit'
      preLoaderRoute: typeof AuthenticatedDashboardsDashboardPathPagePathEditImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboards/$dashboardPath/$pagePath/': {
      id: '/_authenticated/dashboards/$dashboardPath/$pagePath/'
      path: '/dashboards/$dashboardPath/$pagePath'
      fullPath: '/dashboards/$dashboardPath/$pagePath'
      preLoaderRoute: typeof AuthenticatedDashboardsDashboardPathPagePathIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAddonsIndexRoute: typeof AuthenticatedAddonsIndexRoute
  AuthenticatedDashboardsIndexRoute: typeof AuthenticatedDashboardsIndexRoute
  AuthenticatedDashboardsDashboardPathEditRoute: typeof AuthenticatedDashboardsDashboardPathEditRoute
  AuthenticatedDashboardsDashboardPathPagePathEditRoute: typeof AuthenticatedDashboardsDashboardPathPagePathEditRoute
  AuthenticatedDashboardsDashboardPathPagePathIndexRoute: typeof AuthenticatedDashboardsDashboardPathPagePathIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAddonsIndexRoute: AuthenticatedAddonsIndexRoute,
  AuthenticatedDashboardsIndexRoute: AuthenticatedDashboardsIndexRoute,
  AuthenticatedDashboardsDashboardPathEditRoute:
    AuthenticatedDashboardsDashboardPathEditRoute,
  AuthenticatedDashboardsDashboardPathPagePathEditRoute:
    AuthenticatedDashboardsDashboardPathPagePathEditRoute,
  AuthenticatedDashboardsDashboardPathPagePathIndexRoute:
    AuthenticatedDashboardsDashboardPathPagePathIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/addons': typeof AuthenticatedAddonsIndexRoute
  '/dashboards': typeof AuthenticatedDashboardsIndexRoute
  '/dashboards/$dashboardPath/edit': typeof AuthenticatedDashboardsDashboardPathEditRoute
  '/dashboards/$dashboardPath/$pagePath/edit': typeof AuthenticatedDashboardsDashboardPathPagePathEditRoute
  '/dashboards/$dashboardPath/$pagePath': typeof AuthenticatedDashboardsDashboardPathPagePathIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/addons': typeof AuthenticatedAddonsIndexRoute
  '/dashboards': typeof AuthenticatedDashboardsIndexRoute
  '/dashboards/$dashboardPath/edit': typeof AuthenticatedDashboardsDashboardPathEditRoute
  '/dashboards/$dashboardPath/$pagePath/edit': typeof AuthenticatedDashboardsDashboardPathPagePathEditRoute
  '/dashboards/$dashboardPath/$pagePath': typeof AuthenticatedDashboardsDashboardPathPagePathIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/addons/': typeof AuthenticatedAddonsIndexRoute
  '/_authenticated/dashboards/': typeof AuthenticatedDashboardsIndexRoute
  '/_authenticated/dashboards/$dashboardPath/edit': typeof AuthenticatedDashboardsDashboardPathEditRoute
  '/_authenticated/dashboards/$dashboardPath/$pagePath/edit': typeof AuthenticatedDashboardsDashboardPathPagePathEditRoute
  '/_authenticated/dashboards/$dashboardPath/$pagePath/': typeof AuthenticatedDashboardsDashboardPathPagePathIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/addons'
    | '/dashboards'
    | '/dashboards/$dashboardPath/edit'
    | '/dashboards/$dashboardPath/$pagePath/edit'
    | '/dashboards/$dashboardPath/$pagePath'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/addons'
    | '/dashboards'
    | '/dashboards/$dashboardPath/edit'
    | '/dashboards/$dashboardPath/$pagePath/edit'
    | '/dashboards/$dashboardPath/$pagePath'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/addons/'
    | '/_authenticated/dashboards/'
    | '/_authenticated/dashboards/$dashboardPath/edit'
    | '/_authenticated/dashboards/$dashboardPath/$pagePath/edit'
    | '/_authenticated/dashboards/$dashboardPath/$pagePath/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/addons/",
        "/_authenticated/dashboards/",
        "/_authenticated/dashboards/$dashboardPath/edit",
        "/_authenticated/dashboards/$dashboardPath/$pagePath/edit",
        "/_authenticated/dashboards/$dashboardPath/$pagePath/"
      ]
    },
    "/_authenticated/addons/": {
      "filePath": "_authenticated/addons/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboards/": {
      "filePath": "_authenticated/dashboards/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboards/$dashboardPath/edit": {
      "filePath": "_authenticated/dashboards/$dashboardPath/edit.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboards/$dashboardPath/$pagePath/edit": {
      "filePath": "_authenticated/dashboards/$dashboardPath/$pagePath/edit.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboards/$dashboardPath/$pagePath/": {
      "filePath": "_authenticated/dashboards/$dashboardPath/$pagePath/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
